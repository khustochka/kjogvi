version: '3'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      - ..:/workspaces/kjogvi:cached
      - build:/workspaces/kjogvi/_build

    environment:
      DATABASE_HOST: db
      DATABASE_USER: kjogvi
      DATABASE_PASSWORD: kjogvi
      ORNITHO_DATABASE_HOST: db
      ORNITHO_DATABASE_USER: kjogvi
      ORNITHO_DATABASE_PASSWORD: kjogvi

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    depends_on:
      db:
        condition: service_healthy

  db:
    image: bitnami/postgresql:16-debian-12
    restart: unless-stopped
    volumes:
      - postgres-data-16:/var/lib/postgresql/data
      - ./create-db-user.sql:/docker-entrypoint-initdb.d/create-db-user.sql
    environment:
      POSTGRES_USER: kjogvi
      POSTGRES_PASSWORD: kjogvi
      POSTGRES_DB: postgres
      # Your config/database.yml should use the user and password you set here,
      # and host "db" (as that's the name of this service). You can use whatever
      # database name you want. Use `bin/rails db:prepare` to create the database.
      #
      # Example:
      #
      #  development:
      #    <<: *default
      #    host: db
      #    username: postgres
      #    password: postgres
      #    database: myapp_development

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    ports:
      - "5482:5432"  

    healthcheck:
      test: pg_isready -U kjogvi -h 127.0.0.1
      interval: 5s

volumes:
  postgres-data-16:
  build:
