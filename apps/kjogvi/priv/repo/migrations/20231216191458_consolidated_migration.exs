defmodule Kjogvi.Repo.Migrations.ConsolidatedMigration do
  use Ecto.Migration

  # Not restricting strings length, because as per PostgreSQL documentation, there is
  # no performance gain from this: https://www.postgresql.org/docs/15/datatype-character.html

  def change do
    # Locations

    create table(:locations) do
      add :slug, :string, size: 64, null: false
      add :name_en, :string, null: false
      add :location_type, :string, size: 32
      add :ancestry, {:array, :bigint}
      add :iso_code, :string, size: 3
      add :is_patch, :boolean, default: false, null: false
      add :is_5mr, :boolean, default: false, null: false
      add :lat, :numeric, scale: 5, precision: 8
      add :lon, :numeric, scale: 5, precision: 8
      add :public_index, :smallint
      add :is_private, :boolean, default: false, null: false
      add :cached_public_location_id, references("locations", on_delete: :nilify_all)
      # TODO: null: false
      add :cached_country_id, references("locations", on_delete: :restrict)
      add :cached_parent_id, references("locations", on_delete: :nilify_all)
      add :cached_city_id, references("locations", on_delete: :nilify_all)
      add :cached_subdivision_id, references("locations", on_delete: :nilify_all)

      timestamps()
    end

    create index(:locations, :slug, unique: true)
    create index(:locations, :ancestry, using: "GIN")
    create index(:locations, :cached_country_id, where: "cached_country_id IS NOT NULL")
    create index(:locations, :location_type, where: "location_type IS NOT NULL")

    # Cards

    create table(:cards) do
      add :observ_date, :date, null: false
      add :location_id, references("locations", on_delete: :restrict), null: false

      add :effort_type, :string, null: false
      add :start_time, :time
      add :duration_minutes, :integer
      add :distance_kms, :float
      add :area_acres, :float

      add :biotope, :string
      add :weather, :string
      add :observers, :string

      add :notes, :text
      add :kml_url, :string
      add :motorless, :boolean, default: false, null: false

      add :legacy_autogenerated, :boolean, default: false, null: false
      add :resolved, :boolean, default: false, null: false

      add :ebird_id, :string

      timestamps()
    end

    create index(:cards, [:observ_date, :location_id])
    create index(:cards, :location_id)
    create index(:cards, :ebird_id, unique: true, where: "(ebird_id IS NOT NULL)")

    # Observations

    create table(:observations) do
      add :card_id, references("cards", on_delete: :restrict), null: false
      add :taxon_key, :string, null: false
      add :quantity, :string
      add :voice, :boolean, default: false, null: false
      add :notes, :text
      add :private_notes, :text
      add :unreported, :boolean, default: false, null: false
      add :hidden, :boolean, null: false, default: false
      add :ebird_obs_id, :string

      timestamps(null: true)
    end

    create index(:observations, [:card_id])
    create index(:observations, [:taxon_key])
  end
end
