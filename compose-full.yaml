services:
  web:
    build:
      context: .
    environment:
      SECRET_KEY_BASE: M0wBY/H0jPgHjM2ml/wTYn/HKsIopIlsvQvP3MJTXNSptX20f3BcFyjH5MtsFRJW
      DATABASE_URL: postgres://kjogvi:kjogvi@database/kjogvi_prod
      DATABASE_ORNITHO_URL: postgres://kjogvi:kjogvi@database/ornithologue_prod
      PHX_PORT: 5040
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      ORNITHO_IMPORTER_S3_BUCKET: ${ORNITHO_IMPORTER_S3_BUCKET}
      ORNITHO_IMPORTER_S3_REGION: ${ORNITHO_IMPORTER_S3_REGION}
      LEGACY_URL: ${LEGACY_URL}
      LEGACY_API_KEY: ${LEGACY_API_KEY}
    # env_file:
    #   - .env.docker
    # command: 
    ports:
      - "5040:4000"
    depends_on:
      database:
        condition: service_healthy  

  database:
    image: postgres:17.6-bookworm
    environment:
      POSTGRES_USER: kjogvi
      POSTGRES_PASSWORD: kjogvi
      POSTGRES_DB: kjogvi_prod
    # Temporarily to seed database
    ports:
      - "5498:5432"
    volumes:
      - pg_data17:/var/lib/postgresql/data
    configs:
      - source: create_ornitho_db
        target: /docker-entrypoint-initdb.d/create-ornitho-db.sql  
    healthcheck:
      test: pg_isready -U kjogvi -h 127.0.0.1
      interval: 3s

# Declare the volumes that our application uses.
volumes:
  pg_data17:

configs:
  create_ornitho_db:    
    content: |
      CREATE DATABASE ornithologue_prod WITH OWNER kjogvi;  
